# Default values for appoline-k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: "appoline-pfe"

replicaCount: 1

global:
  host: "localhost"
  adminUser: "admin"
  adminPassword: "admin"

grafana:
  service:
    port: 2222
#  nodeSelector:
#    myk8s-2: myk8s-2
  persistence:
    enabled: true
    storageClassName: standard
    accessModes: 
      - ReadWriteOnce
    size: 3Gi
    annotations: {}
#    subPath: "grafana"
    existingClaim: grafana-pvc
  plugins:
    - linksmart-sensorthings-datasource

frost:
  size: 30Mi
  db:
    ports:
      postgresql:
        servicePort: 2223
    persistence:
      enabled: true
      existingClaim:
      storageClassName: frost-server-db-local
      accessModes:
        - ReadWriteOnce
      capacity: 5Gi
      # Uncomment bellow if you want to use the builtin "frost-server-db-local" StorageClass name.
      # Only compatible if the ReadWriteOnce access mode is only claimed (check the frost.db.persistence.accessModes value).
      # See project documentation for more information
      local:
        nodeMountPath: /mnt/data/frost-server-d
        
image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""


service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /frost-server
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}